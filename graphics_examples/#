#include "camera.h"

Camera::Camera(GLuint porgram) {
	program = program
	position = glm::vec3(0.0f, 0.0f, 8.0f);
	angle = glm::vec3(0.0f, 0.0f, 0.0f);
	headsup = glm::vec3(0.0f, 1.0f, 0.0f);
}

Camera::Camera(GLuint program, glm::vec3 positon, glm::vec3 angle, glm::vec3 headsup) {
	positon = position;
	angle = angle;
	headsup = headsup;
}

void Camera::initCam() {
	uniforms.view = glGetUniformLocation(program, "view");
	uniforms.projection = glGetUniformLocation(program, "projection");

}

void Camera::drawCam() {

	//Defining the projection model and passing it to the shader
	glm::mat4 projection = glm::perspective(glm::radians(FOV), aspectRatio, 0.1f, 100.0f);
	glUniformMatrix4fv(uniforms.projection, 1, GL_FALSE, &projection[0][0]);

	glm::mat4 view = glm::lookAt(position, angle, headsup);

	glUniformMatrix4fv(uniforms.view, 1, GL_FALSE, &view[0][0]);
}
